name: Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, curl, gd, mysql, zip, bcmath

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate --ansi

      - name: Run migrations
        run: php artisan migrate --force

      - name: Compile assets
        run: |
          npm install
          npm run production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload assets to S3 (optional)
        run: aws s3 sync public/ s3://${{ secrets.AWS_BUCKET }}/public/ --delete
        continue-on-error: true

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy code via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /var/www/html/PHP-ecommerce-shop-laravel
            git pull origin main
            composer install --no-dev -o
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm install
            npm run production
            exit artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache
            php artisan optimize
            echo "Deployment complete"
          EOF
